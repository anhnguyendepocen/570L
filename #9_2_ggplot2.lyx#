#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\use_default_options true
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Graphing using 
\family typewriter
ggplot2
\family default
: Lab 2
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

opts_chunk$set(cache.path = './cache/Graphics2',
\end_layout

\begin_layout Plain Layout

               fig.path   = './figure/Graphics2')
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Faceting
\end_layout

\begin_layout Standard
The goal with faceting is to make many panels of graphics where each panel
 represents the same relationship between variables, but something changes
 between each panel.
 For example using the 
\family typewriter
iris
\family default
 dataset we could look at the relationship between 
\family typewriter
Sepal.Length
\family default
 and 
\family typewriter
Petal.Length
\family default
 either with all the data in one graph, or one panel per species.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, fig.width=5, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

library(ggplot2)
\end_layout

\begin_layout Plain Layout

ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
\end_layout

\begin_layout Plain Layout

  geom_point() +
\end_layout

\begin_layout Plain Layout

  facet_grid( .
 ~ Species )
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

The line 
\family typewriter
facet_grid( formula )
\family default
 tells 
\family typewriter
ggplot2
\family default
 to make panels, and the formula tells how to orient the panels.
 Recall that a formula is always in the order 
\family typewriter
y ~ x
\family default
 and because I want the species to change as we go across the page, but
 don't have anything I want to change vertically we use 
\family typewriter
.
 ~ Species
\family default
 to represent that.
 If we had wanted three graphs stacked then we could use 
\family typewriter
Species ~ .
\family default
.
 
\end_layout

\begin_layout Standard
For a second example, we look at a dataset that examines the amount a waiter
 was tipped by 244 parties.
 Covariates that were measured include the day of the week, size of the
 party, total amount of the bill, amount tipped, whether there were smokers
 in the group
\begin_inset Foot
status open

\begin_layout Plain Layout
Old data set when smoking in restaurants was allowed.
\end_layout

\end_inset

 and the gender of the person paying the bill
\begin_inset Foot
status open

\begin_layout Plain Layout
Mis-labeled as 
\family typewriter
sex
\family default
.
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, fig.width=5, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

library(reshape) # for the dataset 'tips'
\end_layout

\begin_layout Plain Layout

data(tips)
\end_layout

\begin_layout Plain Layout

head(tips)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

It is easy to look at the relationship between the size of the bill and
 the percent tipped.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, fig.width=5, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

ggplot(tips, aes(x = total_bill, y = tip / total_bill )) +
\end_layout

\begin_layout Plain Layout

  geom_point()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Next we ask if there is a difference in tipping percent based on gender
 or day of the week by plotting this relationship for each combination of
 gender and day.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, fig.width=5, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

ggplot(tips, aes(x = total_bill, y = tip / total_bill )) +
\end_layout

\begin_layout Plain Layout

  geom_point() +
\end_layout

\begin_layout Plain Layout

  facet_grid( sex ~ day )
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sometimes we want multiple rows and columns of facets, but there is only
 one categorical variable with many levels.
 In that case we use 
\family typewriter
facet_wrap
\family default
 which takes a one-sided formula.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, fig.width=5, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

ggplot(tips, aes(x = total_bill, y = tip / total_bill )) +
\end_layout

\begin_layout Plain Layout

  geom_point() +
\end_layout

\begin_layout Plain Layout

  facet_wrap( ~ day )
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finally we can allow the x and y 
\family typewriter
scales
\family default
 to vary between the panels by setting 
\family typewriter

\begin_inset Quotes eld
\end_inset

free
\begin_inset Quotes erd
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes eld
\end_inset

free_x
\begin_inset Quotes erd
\end_inset


\family default
, or 
\family typewriter

\begin_inset Quotes eld
\end_inset

free_y
\begin_inset Quotes erd
\end_inset


\family default
.
 In the following code, the y-axis scale changes between the gender groups.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, fig.width=5, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

ggplot(tips, aes(x = total_bill, y = tip / total_bill )) +
\end_layout

\begin_layout Plain Layout

  geom_point() +
\end_layout

\begin_layout Plain Layout

  facet_grid( sex ~ day, scales="free_y" )
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Modifying Scales
\end_layout

\begin_layout Standard
Often it is useful to modify the scales that we have on the 
\family typewriter
x
\family default
 or 
\family typewriter
y
\family default
 axis.
 In particular we might want to display some modified version of a variable.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Log scales
\end_layout

\begin_layout Standard
For this example, we'll use the 
\family typewriter
ACS
\family default
 data from the 
\family typewriter
Lock5Data
\family default
 package that has information about 
\family typewriter
Income
\family default
 (in thousands of dollars) and 
\family typewriter
Age
\family default
.
 Lets make a scatterplot of the data.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, warning=FALSE, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

library(Lock5Data)
\end_layout

\begin_layout Plain Layout

data(ACS)
\end_layout

\begin_layout Plain Layout

ggplot(ACS, aes(x=Age, y=Income)) +
\end_layout

\begin_layout Plain Layout

  geom_point()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

This is an ugly graph because six observations dominate the graph and the
 bulk of the data (income < $100,000) is squished together.
 One solution is to plot income on the 
\begin_inset Formula $\log_{10}$
\end_inset

 scale.
 There are a couple ways to do this.
 The simplest way is to just do a transformation on the column of data.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, warning=FALSE, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

ggplot(ACS, aes(x=Age, y=log10(Income))) +
\end_layout

\begin_layout Plain Layout

  geom_point()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

This works quite well to see the trend of peak earning happening in a persons
 40s and 50s, but the scale is difficult for me to understand (what does
 
\begin_inset Formula $\log_{10}\left(X\right)=1$
\end_inset

 mean here? Oh right, that is 
\begin_inset Formula $10^{1}=X$
\end_inset

 so that is the $10,000 line).
 It would be really nice if we could do the transformation but have the
 labels on the original scale.
\begin_inset Newline newline
\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, warning=FALSE, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

ggplot(ACS, aes(x=Age, y=log10(Income))) +
\end_layout

\begin_layout Plain Layout

  geom_point() +
\end_layout

\begin_layout Plain Layout

  scale_y_log10()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Now the y-axis is in the original units (thousands of dollars) but obnoxiously
 we only have two labeled values...
 so lets define the major break points (the white lines that have numerical
 labels) to be at 1,10,100 thousand dollars in salary.
 Likewise we will tell 
\family typewriter
ggplot2
\family default
 to set minor break points at 1 to 10 thousand dollars (with steps of 1
 thousand dollars) and then 10 thousand to 100 thousand but with step sizes
 of 10 thousand, and finally minor breaks above 100 thousand being in steps
 of 100 thousand.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, warning=FALSE, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

ggplot(ACS, aes(x=Age, y=Income)) +
\end_layout

\begin_layout Plain Layout

  geom_point() +
\end_layout

\begin_layout Plain Layout

  scale_y_log10(breaks=c(1,10,100),
\end_layout

\begin_layout Plain Layout

                minor=c(1:10,
\end_layout

\begin_layout Plain Layout

                        seq( 10, 100,by=10 ),
\end_layout

\begin_layout Plain Layout

                        seq(100,1000,by=100))) +
\end_layout

\begin_layout Plain Layout

  ylab('Income (1000s of dollars)')
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Arbitrary transformations
\end_layout

\begin_layout Standard
The function 
\family typewriter
scale_y_log10()
\family default
 is actually just a wrapper to the 
\family typewriter
scale_y_continuous()
\family default
 function with a predefined transformation.
 If you want to rescale function using some other function (say the inverse,
 or square-root, or 
\begin_inset Formula $\log_{2}$
\end_inset

) you can use the 
\family typewriter
scale_y_continuous()
\family default
 function (for the x-axis there is a corresponding 
\family typewriter
scale_x_????
\family default
) family of functions.
 There is a whole list of transformations built into 
\family typewriter
ggplot2
\family default
 that work (transformations include "asn", "atanh", "boxcox", "exp", "identity",
 "log", "log10", "log1p", "log2", "logit", "probability", "probit", "reciprocal"
, "reverse" and "sqrt").
 If you need a custom function, that can be done by defining a new transformatio
n via the 
\family typewriter
trans_new()
\family default
 function.
\begin_inset Foot
status open

\begin_layout Plain Layout
I have never needed to do this.
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, warning=FALSE, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

ggplot(ACS, aes(x=Age, y=Income)) +
\end_layout

\begin_layout Plain Layout

  geom_point() +
\end_layout

\begin_layout Plain Layout

  scale_y_continuous(
\end_layout

\begin_layout Plain Layout

                trans='sqrt',        # transform y-axis by sqrt!
\end_layout

\begin_layout Plain Layout

                breaks=c(1,10,100),
\end_layout

\begin_layout Plain Layout

                minor=c(1:10,
\end_layout

\begin_layout Plain Layout

                        seq( 10, 100,by=10 ),
\end_layout

\begin_layout Plain Layout

                        seq(100,1000,by=100))) +
\end_layout

\begin_layout Plain Layout

  ylab('Income (1000s of dollars)')
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Multi-plot
\end_layout

\begin_layout Standard
There are times that you must create a graphic that is composed of several
 sub-graphs and think of it as one object.
 Unfortunately the mechanism that 
\family typewriter
ggplot2
\family default
 gives for this is cumbersome and it is usually easier to use a function
 called 
\family typewriter
multiplot
\family default
.
 The explaination I've heard about why this function wasn't included in
 
\family typewriter
ggplot2
\family default
 is that you should think about faceting first and only resort to 
\family typewriter
multiplot
\family default
 if you have to.
 The function 
\family typewriter
multiplot
\family default
 is included in a couple of packages, e.g.
 
\family typewriter
Rmisc
\family default
, but I always just google 'ggplot2 multiplot' to get to the webpage 
\begin_inset CommandInset href
LatexCommand href
name "http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/"
target "http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/"

\end_inset

.
 
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, warning=FALSE, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

# This example uses the ChickWeight dataset, which comes with ggplot2 
\end_layout

\begin_layout Plain Layout

# First plot 
\end_layout

\begin_layout Plain Layout

p1 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet, group=Chick))
 +
\end_layout

\begin_layout Plain Layout

    geom_line() +
\end_layout

\begin_layout Plain Layout

    ggtitle("Growth curve for individual chicks")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Second plot
\end_layout

\begin_layout Plain Layout

p2 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet)) +
\end_layout

\begin_layout Plain Layout

    geom_point(alpha=.3) +
\end_layout

\begin_layout Plain Layout

    geom_smooth(alpha=.2, size=1) +
\end_layout

\begin_layout Plain Layout

    ggtitle("Fitted growth curve per diet")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Third plot 
\end_layout

\begin_layout Plain Layout

p3 <- ggplot(subset(ChickWeight, Time==21), aes(x=weight, colour=Diet))
 +
\end_layout

\begin_layout Plain Layout

    geom_density() +
\end_layout

\begin_layout Plain Layout

    ggtitle("Final weight, by diet")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Suppose that I want to layout these three plots in an arrangement like so:
\begin_inset Formula 
\[
\textrm{my.\texttt{layout}}=\left[\begin{array}{ccc}
1 & 2 & 2\\
1 & 2 & 2\\
1 & 3 & 3
\end{array}\right]
\]

\end_inset

where plot 1 is a tall, skinny plot on the left, plot 2 is more squarish,
 and plot 3 is short on the bottom right.
 This sort of table arrangement can be quite flexible if you have many rows
 and many columns, but generally we can get by with something with only
 a couple rows/columns.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=5>>=
\end_layout

\begin_layout Plain Layout

library(Rmisc)  # for the multiplot function
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

my.layout = cbind( c(1,1,1), c(2,2,3), c(2,2,3) )
\end_layout

\begin_layout Plain Layout

multiplot( p1, p2, p3, layout=my.layout)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Section
Themes
\end_layout

\begin_layout Standard
A great deal of thought went into the default settings of 
\family typewriter
ggplot2
\family default
 to maximize the visual clarity of the graphs.
 However some people believe the defaults for many of the tiny graphical
 settings are poor.
 You can modify each of these but it is often easier to modify them all
 at once by selecting a different theme.
 The 
\family typewriter
ggplot2
\family default
 package includes several 
\family typewriter
theme_bw()
\family default
, and 
\family typewriter
theme_minimal()
\family default
 being the two that I use most often.
 Below are a few to examples:
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=5>>=
\end_layout

\begin_layout Plain Layout

multiplot( p1 + theme_bw(),          # Black and white
\end_layout

\begin_layout Plain Layout

           p1 + theme_minimal(),   
\end_layout

\begin_layout Plain Layout

           p1 + theme_dark(),        
\end_layout

\begin_layout Plain Layout

           p1 + theme_light(),
\end_layout

\begin_layout Plain Layout

    cols=2 )                         # two columns of graphs      
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset

There are more themes in the package 
\family typewriter
ggthemes
\begin_inset Newline newline
\end_inset


\family default

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=5>>=
\end_layout

\begin_layout Plain Layout

library(ggthemes)
\end_layout

\begin_layout Plain Layout

multiplot( p1 + theme_stata(),          # Black and white
\end_layout

\begin_layout Plain Layout

           p1 + theme_economist(),   
\end_layout

\begin_layout Plain Layout

           p1 + theme_fivethirtyeight(),        
\end_layout

\begin_layout Plain Layout

           p1 + theme_excel(),
\end_layout

\begin_layout Plain Layout

    cols=2 )                         # two columns of graphs      
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Almost everything you want to modify can be modified within the theme and
 you should check out the 
\family typewriter
ggplot2
\family default
 documentation for more information and examples of how to modify different
 elements.
 
\begin_inset CommandInset href
LatexCommand href
name "http://docs.ggplot2.org/current/theme.html"
target "http://docs.ggplot2.org/current/theme.html"

\end_inset


\end_layout

\begin_layout Section
Exercises
\end_layout

\begin_layout Enumerate
We'll next make some density plots that relate several factors towards the
 birthweight of a child.
\end_layout

\begin_deeper
\begin_layout Enumerate
Load the 
\family typewriter
MASS
\family default
 library, which includes the dataset 
\family typewriter
birthwt
\family default
 which contains information about 189 babies and their mothers.
\end_layout

\begin_layout Enumerate
Add better labels to the 
\family typewriter
race
\family default
 and 
\family typewriter
smoke
\family default
 variables using the following:
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(MASS)
\end_layout

\begin_layout Plain Layout

library(dplyr)
\end_layout

\begin_layout Plain Layout

birthwt <- birthwt %>% mutate(
\end_layout

\begin_layout Plain Layout

  race  = factor(race,  labels=c('White','Black','Other')),
\end_layout

\begin_layout Plain Layout

  smoke = factor(smoke, labels=c('No Smoke', 'Smoke')))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Graph a histogram of the birthweights 
\family typewriter
bwt
\family default
 using 
\family typewriter
ggplot(birthwt, aes(x=bwt)) + geom_histogram()
\family default
.
\end_layout

\begin_layout Enumerate
Make separate graphs that denote whether a mother smoked during pregnancy
 using the 
\family typewriter
facet_grid()
\family default
 command.
\end_layout

\begin_layout Enumerate
Perhaps race matters in relation to smoking.
 Make our grid of graphs vary with smoking status changing vertically, and
 race changing horizontally (that is the formula in 
\family typewriter
facet_grid()
\family default
 should have smoking be the y variable and race as the x).
\end_layout

\begin_layout Enumerate
Remove race from the facet grid, (so go back to the graph you had in part
 d).
 I'd like to next add an estimated density line to the graphs, but to do
 that, I need to first change the y-axis to be density (instead of counts),
 which we do by using 
\family typewriter
aes(y=..density..)
\family default
 in the 
\family typewriter
ggplot()
\family default
 aesthetics command.
\end_layout

\begin_layout Enumerate
Next we can add the estimated smooth density using the 
\family typewriter
geom_density()
\end_layout

\begin_layout Enumerate
To really make this look nice, lets change the fill color of the histograms
 to be something less dark, lets use 
\family typewriter
fill='cornsilk'
\family default
 and 
\family typewriter
color='grey60'
\family default
.
 To play with different colors that have names, check out the following:
 
\begin_inset CommandInset href
LatexCommand href
target "http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf"

\end_inset

.
\end_layout

\begin_layout Enumerate
Change the order in which the histogram and the density line are added to
 the plot.
 Does it matter and which do you prefer?
\end_layout

\end_deeper
\begin_layout Enumerate
Load the dataset 
\family typewriter
ChickWeight
\family default
 and remind yourself what the data was using 
\family typewriter
?ChickWeight
\family default
.
 Using 
\family typewriter
facet_wrap()
\family default
, produce a scatter plot of weight vs age for each chick.
 Use color to distinguish the four different 
\family typewriter
Diet
\family default
 treatments.
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, fig.width=5, fig.height=2.5>>=
\end_layout

\begin_layout Plain Layout

# load the data
\end_layout

\begin_layout Plain Layout

data(ChickWeight)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

<<message=FALSE, fig.width=5, fig.height=6, eval=FALSE, echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

ggplot(ChickWeight, aes(x=Time, y=weight, color=Diet)) +
\end_layout

\begin_layout Plain Layout

  geom_point() +
\end_layout

\begin_layout Plain Layout

  facet_wrap( ~ Chick )
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
